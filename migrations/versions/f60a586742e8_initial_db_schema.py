"""Initial DB schema

Revision ID: f60a586742e8
Revises: 
Create Date: 2022-11-23 20:31:12.965452

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "f60a586742e8"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "Environ",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("value", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("name", name=op.f("pk_Environ")),
    )
    op.create_table(
        "PluginTag",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("tag", sa.String(length=100), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_PluginTag")),
        sa.UniqueConstraint("tag", name=op.f("uq_PluginTag_tag")),
    )
    op.create_table(
        "Seed",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("url", sa.String(length=2048), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_Seed")),
        sa.UniqueConstraint("url", name=op.f("uq_Seed_url")),
    )
    op.create_table(
        "Service",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.Unicode(), nullable=False),
        sa.Column("description", sa.UnicodeText(), nullable=True),
        sa.Column("service_id", sa.String(length=255), nullable=False),
        sa.Column("url", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_Service")),
        sa.UniqueConstraint("service_id", name=op.f("uq_Service_service_id")),
    )
    with op.batch_alter_table("Service", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_Service_description"), ["description"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_Service_name"), ["name"], unique=False)

    op.create_table(
        "TemplateTag",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("tag", sa.String(length=100), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_TemplateTag")),
        sa.UniqueConstraint("tag", name=op.f("uq_TemplateTag_tag")),
    )
    op.create_table(
        "WorkspaceTemplate",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.Unicode(), nullable=False),
        sa.Column("description", sa.UnicodeText(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_WorkspaceTemplate")),
    )
    with op.batch_alter_table("WorkspaceTemplate", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_WorkspaceTemplate_description"), ["description"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_WorkspaceTemplate_name"), ["name"], unique=False
        )

    op.create_table(
        "RAMP",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.Unicode(), nullable=False),
        sa.Column("description", sa.UnicodeText(), nullable=True),
        sa.Column("_seed_id", sa.Integer(), nullable=True),
        sa.Column("plugin_id", sa.String(length=255), nullable=True),
        sa.Column("version", sa.String(length=100), nullable=True),
        sa.Column("sort_version", sa.String(length=120), nullable=True),
        sa.Column("plugin_type", sa.String(length=100), nullable=True),
        sa.Column("url", sa.String(length=2048), nullable=True),
        sa.Column("entry_url", sa.Text(), nullable=True),
        sa.Column("ui_url", sa.Text(), nullable=True),
        sa.Column("schema", sa.JSON(), nullable=True),
        sa.Column("last_available", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["_seed_id"], ["Seed.id"], name=op.f("fk_RAMP__seed_id_Seed")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_RAMP")),
        sa.UniqueConstraint("plugin_id", "version", name="uix_RAMP"),
    )
    with op.batch_alter_table("RAMP", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_RAMP_description"), ["description"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_RAMP_name"), ["name"], unique=False)

    op.create_table(
        "TagToTemplate",
        sa.Column("template_id", sa.Integer(), nullable=False),
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["tag_id"],
            ["TemplateTag.id"],
            name=op.f("fk_TagToTemplate_tag_id_TemplateTag"),
        ),
        sa.ForeignKeyConstraint(
            ["template_id"],
            ["WorkspaceTemplate.id"],
            name=op.f("fk_TagToTemplate_template_id_WorkspaceTemplate"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("template_id", "tag_id", name=op.f("pk_TagToTemplate")),
    )
    op.create_table(
        "TemplateTab",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.Unicode(), nullable=False),
        sa.Column("description", sa.UnicodeText(), nullable=True),
        sa.Column("template_id", sa.Integer(), nullable=False),
        sa.Column("sort_key", sa.Integer(), nullable=True),
        sa.Column("plugin_filter", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["template_id"],
            ["WorkspaceTemplate.id"],
            name=op.f("fk_TemplateTab_template_id_WorkspaceTemplate"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_TemplateTab")),
    )
    with op.batch_alter_table("TemplateTab", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_TemplateTab_description"), ["description"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_TemplateTab_name"), ["name"], unique=False)

    op.create_table(
        "DataToRamp",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("ramp_id", sa.Integer(), nullable=False),
        sa.Column("identifier", sa.String(length=255), nullable=True),
        sa.Column("required", sa.Boolean(), nullable=True),
        sa.Column("relation", sa.String(length=100), nullable=True),
        sa.Column("data_type_start", sa.String(length=255), nullable=True),
        sa.Column("data_type_end", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(
            ["ramp_id"],
            ["RAMP.id"],
            name=op.f("fk_DataToRamp_ramp_id_RAMP"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_DataToRamp")),
    )
    op.create_table(
        "DependencyToRAMP",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("ramp_id", sa.Integer(), nullable=False),
        sa.Column("required", sa.Boolean(), nullable=True),
        sa.Column("parameter", sa.String(length=255), nullable=True),
        sa.Column("plugin_id", sa.String(length=255), nullable=True),
        sa.Column("version", sa.String(length=512), nullable=True),
        sa.Column("plugin_type", sa.String(length=100), nullable=True),
        sa.Column("best_match_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["best_match_id"],
            ["RAMP.id"],
            name=op.f("fk_DependencyToRAMP_best_match_id_RAMP"),
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["ramp_id"],
            ["RAMP.id"],
            name=op.f("fk_DependencyToRAMP_ramp_id_RAMP"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_DependencyToRAMP")),
    )
    op.create_table(
        "RampToTemplateTab",
        sa.Column("tab_id", sa.Integer(), nullable=False),
        sa.Column("ramp_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["ramp_id"],
            ["RAMP.id"],
            name=op.f("fk_RampToTemplateTab_ramp_id_RAMP"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["tab_id"],
            ["TemplateTab.id"],
            name=op.f("fk_RampToTemplateTab_tab_id_TemplateTab"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("tab_id", "ramp_id", name=op.f("pk_RampToTemplateTab")),
    )
    op.create_table(
        "TagToRAMP",
        sa.Column("ramp_id", sa.Integer(), nullable=False),
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["ramp_id"],
            ["RAMP.id"],
            name=op.f("fk_TagToRAMP_ramp_id_RAMP"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"], ["PluginTag.id"], name=op.f("fk_TagToRAMP_tag_id_PluginTag")
        ),
        sa.PrimaryKeyConstraint("ramp_id", "tag_id", name=op.f("pk_TagToRAMP")),
    )
    op.create_table(
        "ContentTypeToData",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("data_id", sa.Integer(), nullable=False),
        sa.Column("content_type_start", sa.String(length=255), nullable=True),
        sa.Column("content_type_end", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(
            ["data_id"],
            ["DataToRamp.id"],
            name=op.f("fk_ContentTypeToData_data_id_DataToRamp"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_ContentTypeToData")),
    )
    op.create_table(
        "TagToDependency",
        sa.Column("dependency_id", sa.Integer(), nullable=False),
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.Column("exclude", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["dependency_id"],
            ["DependencyToRAMP.id"],
            name=op.f("fk_TagToDependency_dependency_id_DependencyToRAMP"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"], ["PluginTag.id"], name=op.f("fk_TagToDependency_tag_id_PluginTag")
        ),
        sa.PrimaryKeyConstraint(
            "dependency_id", "tag_id", name=op.f("pk_TagToDependency")
        ),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("TagToDependency")
    op.drop_table("ContentTypeToData")
    op.drop_table("TagToRAMP")
    op.drop_table("RampToTemplateTab")
    op.drop_table("DependencyToRAMP")
    op.drop_table("DataToRamp")
    with op.batch_alter_table("TemplateTab", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_TemplateTab_name"))
        batch_op.drop_index(batch_op.f("ix_TemplateTab_description"))

    op.drop_table("TemplateTab")
    op.drop_table("TagToTemplate")
    with op.batch_alter_table("RAMP", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_RAMP_name"))
        batch_op.drop_index(batch_op.f("ix_RAMP_description"))

    op.drop_table("RAMP")
    with op.batch_alter_table("WorkspaceTemplate", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_WorkspaceTemplate_name"))
        batch_op.drop_index(batch_op.f("ix_WorkspaceTemplate_description"))

    op.drop_table("WorkspaceTemplate")
    op.drop_table("TemplateTag")
    with op.batch_alter_table("Service", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_Service_name"))
        batch_op.drop_index(batch_op.f("ix_Service_description"))

    op.drop_table("Service")
    op.drop_table("Seed")
    op.drop_table("PluginTag")
    op.drop_table("Environ")
    # ### end Alembic commands ###
